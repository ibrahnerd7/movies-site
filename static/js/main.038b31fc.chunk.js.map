{"version":3,"sources":["views/home/components/Header.js","application/constants.js","application/actions-creators/popular.js","views/home/components/Popular.js","views/home/components/TagLine.js","views/home/components/Trending.js","application/actions-creators/trending.js","views/home/index.js","application/reducers/trending.js","application/reducers/popular.js","application/reducers/search.js","application/reducers/shows.js","application/reducers/people.js","application/reducers/movie.js","application/reducers/reviews.js","application/reducers/recommendations.js","application/reducers/index.js","infrastructure/services/api/constants/index.js","infrastructure/services/api/trending/index.js","application/sagas/trendingSaga.js","infrastructure/services/api/popular/index.js","application/sagas/popularSaga.js","infrastructure/services/api/search/index.js","application/sagas/searchSaga.js","application/actions-creators/search.js","infrastructure/services/api/shows/index.js","application/actions-creators/shows.js","application/sagas/showsSaga.js","infrastructure/services/api/people/index.js","application/actions-creators/people.js","application/sagas/peopleSaga.js","infrastructure/services/api/movies/index.js","application/actions-creators/movie.js","application/sagas/movieSaga.js","infrastructure/services/api/reviews/index.js","application/actions-creators/reviews.js","application/sagas/reviewsSaga.js","infrastructure/services/api/recommendations/index.js","application/sagas/recommendationsSaga.js","application/actions-creators/recommendations.js","application/sagas/index.js","application/store.js","views/movies/Movies.js","views/search/Search.js","views/shows/Shows.js","views/shows/index.js","views/people/People.js","views/movie/Movie.js","views/footer/index.js","infrastructure/services/firebase/config.js","infrastructure/services/firebase/auth.js","views/signin/index.js","views/signup/index.js","views/forgotpassword/index.js","App.js","reportWebVitals.js","index.js"],"names":["MoviesHeaderItems","UncontrolledDropdown","nav","inNavbar","DropdownToggle","DropdownMenu","right","DropdownItem","href","ShowsHeaderItems","PeopleHeaderItems","Header","useState","isOpen","setIsOpen","Navbar","style","backgroundColor","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavbarText","size","TRENDING","POPULAR","SEARCH","SHOWS","PEOPLE","MOVIE","REVIEWS","RECOMMENDATIONS","requestPopularSuccess","popular","type","PopularCard","item","history","Col","md","xs","push","id","cursor","Card","inverse","border","CardImg","src","poster_path","alt","original_title","title","Date","release_date","toLocaleDateString","Popular","activePopularType","setActivePopularType","useSelector","state","populars","dispatch","loading","useDispatch","useHistory","useEffect","popularType","Row","borderWidth","borderColor","borderStyle","width","textAlign","borderRadius","marginRight","marginLeft","map","popularItem","TagLine","searchTerm","backgroundImage","backgroundSize","backgroundRepeat","paddingTop","paddingBottom","paddingLeft","paddingRight","Button","color","TrendingCard","Trending","activeTimeWindow","setActiveTimeWindow","trendings","timeWindow","trendingItem","Home","Container","fluid","initialState","error","trendingReducer","action","popularReducer","results","searchReducer","shows","showsReducer","people","peopleReducer","movie","movieReducer","reviews","reviewsReducer","recommendations","recommendationsReducer","rootReducer","combineReducers","search","BASE_URL","buildUrl","urlChunk","getTrendingByTimeWindow","a","axios","get","response","data","console","log","message","handleTrendingLoad","watchTrendingLoad","call","trending","put","takeEvery","getPopularByType","handlePopularLoad","watchPopularLoad","getSearchResults","handleSearchLoad","watchSearchLoad","searchResults","getShowsByType","showType","requestShowsSuccess","handleShowsLoad","watchShowsLoad","getPeopleByType","peopleType","requestPeopleSuccess","handlePeopleLoad","watchPeopleLoad","getMoviesByTerm","term","getMovieById","movieId","requestMovieSuccess","handleMovieLoad","watchMovieLoad","getReviewsByMovie","requestReviewsSuccess","handleReviewsLoad","watchReviewsLoad","getRecommendationsByMovie","handleRecommendationsLoad","watchRecommendationsLoad","rootSaga","all","trendingSaga","popularSaga","searchSaga","showsSaga","peopleSaga","movieSaga","reviewsSaga","recommendationsSaga","configureStore","sagaMiddleware","createSagaMiddleware","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","run","Movie","movieItem","top","CardBody","CardTitle","tag","CardSubtitle","Movies","useParams","movies","setMovies","fetchMoviesByTerm","movieTerm","normalizedMovieTerm","replace","fetchedMovies","charAt","toUpperCase","slice","capitalizeTitle","CardGroup","SearchResultsCard","height","original_name","CardText","overview","Search","query","URLSearchParams","useLocation","requestSearch","searchResult","ShowsItem","showItem","name","Shows","normalizedShowTerm","show","Person","personItem","profile_path","known_for","People","normalizedPeopleTerm","RecommendationsCard","recommendation","ReviewsCard","review","author_details","avatar_path","substring","marginTop","author","content","created_at","MovieImage","MovieDescription","getFullYear","genres","genre","getStyles","backdrop_path","requestReviews","requestRecommendations","Logo","Basics","GetInvolved","Community","Legal","Footer","padding","firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","app","firebase","initializeApp","authentication","auth","registerUser","firestore","storage","email","password","createUserWithEmailAndPassword","user","loginUser","signInWithEmailAndPassword","sendResetEmail","sent","sendPasswordResetEmail","Error","SignIn","setEmail","setPassword","setError","signInUser","e","preventDefault","uid","marginBottom","Input","placeholder","value","onChange","event","target","block","SignUp","signUpUser","ForgotPassword","resetPassword","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.038b31fc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    NavbarText\n} from 'reactstrap';\nimport {FiChevronDown} from 'react-icons/fi'\nimport {FiSearch} from 'react-icons/fi'\nimport {FiBookmark} from 'react-icons/fi'\n\nconst MoviesHeaderItems=()=>{\n    return(\n        <UncontrolledDropdown nav inNavbar>\n        <DropdownToggle nav>\n            Movies <FiChevronDown />\n</DropdownToggle>\n        <DropdownMenu right>\n            <DropdownItem  href=\"/movies/popular\">\n            Popular\n                \n</DropdownItem>\n            <DropdownItem href=\"/movies/now-playing\">\n                Now Playing\n</DropdownItem>\n            <DropdownItem href=\"/movies/upcoming\">\n                Upcoming\n</DropdownItem>\n            <DropdownItem href=\"/movies/top-rated\">\n                Top rated\n</DropdownItem>\n        </DropdownMenu>\n    </UncontrolledDropdown>\n    )\n}\n\nconst ShowsHeaderItems=()=>{\n    return(\n        <UncontrolledDropdown nav inNavbar>\n        <DropdownToggle nav >TV Shows<FiChevronDown /> </DropdownToggle>\n        <DropdownMenu right>\n            <DropdownItem href=\"/shows/popular\">\n                Popular\n</DropdownItem>\n            <DropdownItem href=\"/shows/airing-today\">\n                Airing Today\n</DropdownItem>\n            <DropdownItem href=\"/shows/on_the_air\">\n                On TV\n</DropdownItem>\n            <DropdownItem href=\"/shows/top-rated\">\n                Top rated\n</DropdownItem>\n        </DropdownMenu>\n    </UncontrolledDropdown>\n    )\n}\n\nconst PeopleHeaderItems=()=>{\n    return(\n        <UncontrolledDropdown nav inNavbar>\n        <DropdownToggle nav >\n            People <FiChevronDown />\n</DropdownToggle>\n        <DropdownMenu right>\n            <DropdownItem href=\"/people/popular\">\n                Popular people\n</DropdownItem>\n        </DropdownMenu>\n    </UncontrolledDropdown>\n    )\n}\n\nconst Header = () => {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    return ( \n            <Navbar style={{backgroundColor:\"#24282d\"}} expand=\"md\"  >\n                <NavbarBrand href=\"/\">Movies Site</NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto\" >\n                     <MoviesHeaderItems />\n                       <ShowsHeaderItems />\n                      <PeopleHeaderItems />\n                    </Nav>\n                    <Nav className=\"ml-auto\" navbar>\n                    <NavbarText className=\"mx-2\"> <a href=\"/signin\"><FiSearch size={32}/></a></NavbarText>\n                    <NavbarText className=\"mx-2\"> <a href=\"/signin\"><FiBookmark size={32}/></a></NavbarText>\n                    {/* <NavbarText> <a href=\"/signin\">Sign In</a></NavbarText> */}\n                    </Nav>\n                </Collapse>\n            </Navbar>\n    );\n}\n\nexport default Header;","const TRENDING={\n    LOAD: 'TRENDING_LOAD',\n    LOAD_SUCCESS: 'TRENDING_LOAD_SUCCESS',\n    LOAD_FAIL: 'TRENDING_LOAD_FAIL',\n}\n\nconst POPULAR={\n    LOAD: 'POPULAR_LOAD',\n    LOAD_SUCCESS: 'POPULAR_LOAD_SUCCESS',\n    LOAD_FAIL: 'POPULAR_LOAD_FAIL',\n}\n\nconst SEARCH={\n    LOAD:'SEARCH_LOAD',\n    LOAD_SUCCESS: 'SEARCH_LOAD_SUCCESS',\n    LOAD_FAIL: 'SEARCH_LOAD_FAIL',\n}\n\nconst SHOWS={\n    LOAD:'SHOWS_LOAD',\n    LOAD_SUCCESS:'SHOWS_LOAD_SUCCESS',\n    LOAD_FAIL:'SHOWS_LOAD_FAIL',\n}\n\nconst PEOPLE={\n    LOAD:'PEOPLE_LOAD',\n    LOAD_SUCCESS:'PEOPLE_LOAD_SUCCESS',\n    LOAD_FAIL:\"PEOPLE_LOAD_FAIL\",\n}\n\nconst MOVIE={\n    LOAD:'MOVIE_LOAD',\n    LOAD_SUCCESS:'MOVIE_LOAD_SUCCESS',\n    LOAD_FAIL:\"MOVIE_LOAD_FAIL\",\n}\n\nconst REVIEWS={\n    LOAD:'REVIEWS_LOAD',\n    LOAD_SUCCESS:'REVIEWS_LOAD_SUCCESS',\n    LOAD_FAIL:\"REVIEWS_LOAD_FAIL\",\n}\n\nconst RECOMMENDATIONS={\n    LOAD:'RECOMMENDATIONS_LOAD',\n    LOAD_SUCCESS:'RECOMMENDATIONS_LOAD_SUCCESS',\n    LOAD_FAIL:\"RECOMMENDATIONS_LOAD_FAIL\",\n}\n\nexport {TRENDING,POPULAR, SEARCH, SHOWS, PEOPLE, MOVIE, REVIEWS, RECOMMENDATIONS};","import { POPULAR } from \"../constants\";\n\nexport const requestPopular=(popularType)=>({\n    type:POPULAR.LOAD,\n    popularType,\n});\n\nexport const requestPopularSuccess=popular=>({\n    type:POPULAR.LOAD_SUCCESS,\n    popular,\n});\n\nexport const requestPopularError=()=>({\n    type:POPULAR.LOAD_FAIL,\n});\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Button, Row, ButtonGroup, Card, CardImg,Col} from 'reactstrap';\nimport { requestPopular } from '../../../application/actions-creators/popular';\nimport './style.css'\n\n\nconst PopularCard = ({item,history}) => {\n\n    return  <Col md=\"2\" xs=\"6\" onClick={()=>history.push(`/movie/${item.id}`)} style={{cursor:\"pointer\"}}>\n        <Card inverse style={{border:\"none\"}}>\n            <CardImg  src={`https://www.themoviedb.org/t/p/w440_and_h660_face${item.poster_path}`} alt=\"Card image cap\" />\n        </Card>\n        <h6 className=\"text-white\">{item.original_title || item.title}</h6>\n        <p className=\"text-white\">{new Date(item.release_date).toLocaleDateString()}</p>\n    </Col>;\n}\n\nconst Popular = () => {\n  const [activePopularType, setActivePopularType]=useState(\"movie\");\n  const {popular,loading}=useSelector(state=>state.populars);\n  const dispatch=useDispatch()\n  const history=useHistory()\n\n\n  useEffect(()=>{\n  dispatch(requestPopular(activePopularType));\n  },[activePopularType, dispatch])\n\n    return (\n        <div>\n            <Row className=\"mt-5 ml-1\">\n                <h3 className=\"text-white\">What's popular</h3>\n                <Row  className=\"m-1\">\n                        <p onClick={() =>setActivePopularType(\"movie\")} style={{cursor:\"pointer\", borderWidth:1, borderColor:\"#25a2b8\", borderStyle:\"solid\",width:100, textAlign:\"center\", borderRadius:50,marginRight:8}} className=\"text-white\">Streaming</p>\n                        <p  onClick={() => setActivePopularType(\"tv\")} style={{cursor:\"pointer\",borderWidth:1, borderColor:\"#25a2b8\", borderStyle:\"solid\",width:100, textAlign:\"center\", borderRadius:50,marginLeft:8}} className=\"text-white\">On Tv</p>\n                        </Row>\n            </Row>\n            <Row className=\"flex-nowrap flex-row trending flex-1\" >\n                    {\n                    popular.map((popularItem) => <PopularCard item={popularItem} key={popularItem.id} history={history}/>)\n                }\n                </Row>\n        </div>\n    )\n}\n\nexport default Popular;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Button } from 'reactstrap';\nimport {FiArrowRight} from 'react-icons/fi'\n\nconst TagLine = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const history = useHistory()\n\n  return (\n    <div style={{\n      backgroundImage: `url(https://images.pexels.com/photos/3811867/pexels-photo-3811867.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260)`,\n      backgroundSize:\"100%\",\n      backgroundRepeat:\"no-repeat\",\n      paddingTop: 176,\n      // marginTop:56,\n      paddingBottom: 176,\n      paddingLeft: 24,\n      paddingRight: 24,\n    }}>\n      <h1 className=\"text-white\">Welcome .</h1>\n      <h5 className=\"text-white\">Millions of movies, TV shows and people to discover. Explore now.</h5>\n      <br />\n      <br />\n          <Button color=\"info\" onClick={() => history.push(`/search?query=${searchTerm}`)} > Get started   <FiArrowRight /></Button>\n    </div>\n  )\n}\n\nexport default TagLine;","import React, { useEffect, useState} from 'react';\nimport { Card, CardImg, Col, Row, Button } from 'reactstrap';\nimport './style.css'\nimport {  useDispatch, useSelector } from 'react-redux';\nimport { requestTrendings } from '../../../application/actions-creators/trending';\nimport { useHistory } from 'react-router';\n\nconst TrendingCard = ({ item ,history}) => {\n    return <Col md=\"2\" xs=\"6\" onClick={()=>history.push(`/movie/${item.id}`)} style={{cursor:\"pointer\"}}>\n        <Card inverse style={{border:\"none\"}}>\n            <CardImg src={`https://www.themoviedb.org/t/p/w440_and_h660_face${item.poster_path}`} alt=\"Card image cap\" />\n        </Card>\n        <h6 className=\"text-white\">{item.original_title || item.title}</h6>\n        <p className=\"text-white\">{new Date(item.release_date).toLocaleDateString()}</p>\n    </Col>;\n}\n\nconst Trending =()=> {\n    const [activeTimeWindow, setActiveTimeWindow]=useState(\"day\");\n    const {trendings,loading}=useSelector(state=>state.trendings);\n\n    const dispatch=useDispatch()\n    const history=useHistory()\n  \n  \n    useEffect(()=>{\n    dispatch(requestTrendings(activeTimeWindow));\n    },[activeTimeWindow, dispatch])\n\n\n        return (\n            <div >\n                <Row className=\"mt-5 ml-1\">\n                    <h4 className=\"text-white \">Trending</h4>\n                    <Row  className=\"m-1\">\n                        <p onClick={() =>setActiveTimeWindow(\"day\")} style={{cursor:\"pointer\", borderWidth:1, borderColor:\"#25a2b8\", borderStyle:\"solid\",width:100, textAlign:\"center\", borderRadius:50,marginRight:8}} className=\"text-white\">Today</p>\n                        <p  onClick={() => setActiveTimeWindow(\"week\")} style={{cursor:\"pointer\",borderWidth:1, borderColor:\"#25a2b8\", borderStyle:\"solid\",width:100, textAlign:\"center\", borderRadius:50,marginLeft:8}} className=\"text-white\">This week</p>\n                        </Row>\n  \n                </Row>\n                <Row className=\"flex-nowrap flex-row trending flex-1\" >\n                    {\n                    trendings.map((trendingItem) => <TrendingCard item={trendingItem} key={trendingItem.id} history={history}/>)\n                }\n                </Row>\n            </div>\n        )\n    \n\n}\n\nexport default Trending;\n\n\n","import { TRENDING } from \"../constants\";\n\nexport const requestTrendings=(timeWindow)=>({\n    type:TRENDING.LOAD,\n    timeWindow\n});\n\nexport const requestTrendingsSuccess=trendings=>({\n    type:TRENDING.LOAD_SUCCESS,\n    trendings,\n});\n\nexport const requestTrendingsError=()=>({\n    type:TRENDING.LOAD_FAIL,\n});\n","import React from 'react';\nimport {Trending, TagLine, Popular} from './components';\nimport {Container} from 'reactstrap';\n\nconst Home=()=>{\n    return(\n        <Container style={{backgroundColor:\"#24282d\",paddingBottom:12}}  fluid>\n            <TagLine />\n            <br />\n            <Trending />\n            <br />\n            <Popular />\n        </Container>\n    )\n}\n\nexport default Home;","import { TRENDING } from \"../constants\";\n\nconst initialState = {\n    trendings: [],\n    loading: false,\n    error: false\n}\n\nconst trendingReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case TRENDING.LOAD:\n            return {\n                trendings: [],\n                loading: true,\n                error: false,\n            };\n        case TRENDING.LOAD_SUCCESS:\n            return {\n                trendings: action.trendings,\n                loading: false,\n                error: false\n            };\n        case TRENDING.LOAD_FAIL:\n            return {\n                trendings: [],\n                loading: false,\n                error: true\n            };\n        default:\n            return state;\n    }\n};\n\nexport default trendingReducer;","import { POPULAR } from \"../constants\";\n\nconst initialState = {\n    popular: [],\n    loading: false,\n    error: false\n}\n\nconst popularReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case POPULAR.LOAD:\n            return {\n                popular: [],\n                loading: true,\n                error: false,\n            };\n        case POPULAR.LOAD_SUCCESS:\n            return {\n                popular: action.popular,\n                loading: false,\n                error: false\n            };\n        case POPULAR.LOAD_FAIL:\n            return {\n                popular: [],\n                loading: false,\n                error: true\n            };\n        default:\n            return state;\n    }\n};\n\nexport default popularReducer;","import { SEARCH } from \"../constants\";\n\nconst initialState = {\n    results: [],\n    loading: false,\n    error: false\n}\n\nconst searchReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SEARCH.LOAD:\n            return {\n                results: [],\n                loading: true,\n                error: false,\n            };\n        case SEARCH.LOAD_SUCCESS:\n            return {\n                results: action.results,\n                loading: false,\n                error: false\n            };\n        case SEARCH.LOAD_FAIL:\n            return {\n                results: [],\n                loading: false,\n                error: true\n            };\n        default:\n            return state;\n    }\n};\n\nexport default searchReducer;","import { SHOWS } from \"../constants\";\n\nconst initialState = {\n    shows: [],\n    loading: false,\n    error: false\n}\n\nconst showsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SHOWS.LOAD:\n            return {\n                shows: [],\n                loading: true,\n                error: false,\n            };\n        case SHOWS.LOAD_SUCCESS:\n            return {\n                shows: action.shows,\n                loading: false,\n                error: false\n            };\n        case SHOWS.LOAD_FAIL:\n            return {\n                shows: [],\n                loading: false,\n                error: true\n            };\n        default:\n            return state;\n    }\n};\n\nexport default showsReducer;","import { PEOPLE } from \"../constants\";\n\nconst initialState = {\n    people: [],\n    loading: false,\n    error: false\n}\n\nconst peopleReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case PEOPLE.LOAD:\n            return {\n                people: [],\n                loading: true,\n                error: false,\n            };\n        case PEOPLE.LOAD_SUCCESS:\n            return {\n                people: action.people,\n                loading: false,\n                error: false\n            };\n        case PEOPLE.LOAD_FAIL:\n            return {\n                people: [],\n                loading: false,\n                error: true\n            };\n        default:\n            return state;\n    }\n};\n\nexport default peopleReducer;","import { MOVIE } from \"../constants\";\n\nconst initialState = {\n    movie: {},\n    loading: false,\n    error: false\n}\n\nconst movieReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case MOVIE.LOAD:\n            return {\n                movie:{},\n                loading: true,\n                error: false,\n            };\n        case MOVIE.LOAD_SUCCESS:\n            return {\n                movie: action.movie,\n                loading: false,\n                error: false\n            };\n        case MOVIE.LOAD_FAIL:\n            return {\n                movie: {},\n                loading: false,\n                error: true\n            };\n        default:\n            return state;\n    }\n};\n\nexport default movieReducer;","import { REVIEWS } from \"../constants\";\n\nconst initialState = {\n    reviews: [],\n    loading: false,\n    error: false\n}\n\nconst reviewsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case REVIEWS.LOAD:\n            return {\n                reviews: [],\n                loading: true,\n                error: false,\n            };\n        case REVIEWS.LOAD_SUCCESS:\n            return {\n                reviews: action.reviews,\n                loading: false,\n                error: false\n            };\n        case REVIEWS.LOAD_FAIL:\n            return {\n                reviews: [],\n                loading: false,\n                error: true\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reviewsReducer;","import { RECOMMENDATIONS } from \"../constants\";\n\nconst initialState = {\n    recommendations: [],\n    loading: false,\n    error: false\n}\n\nconst recommendationsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case RECOMMENDATIONS.LOAD:\n            return {\n                recommendations: [],\n                loading: true,\n                error: false,\n            };\n        case RECOMMENDATIONS.LOAD_SUCCESS:\n            return {\n                recommendations: action.recommendations,\n                loading: false,\n                error: false\n            };\n        case RECOMMENDATIONS.LOAD_FAIL:\n            return {\n                recommendations: [],\n                loading: false,\n                error: true\n            };\n        default:\n            return state;\n    }\n};\n\nexport default recommendationsReducer;","import { combineReducers } from 'redux';\nimport trendingReducer from './trending'\nimport popularReducer from './popular';\nimport searchReducer from './search';\nimport showsReducer from './shows';\nimport peopleReducer from './people';\nimport movieReducer from './movie';\nimport reviewsReducer from './reviews';\nimport recommendationsReducer from \"./recommendations\";\n\nconst rootReducer= combineReducers({\n  trendings:trendingReducer,\n  populars:popularReducer,\n  search:searchReducer,\n  shows:showsReducer,\n  people:peopleReducer,\n  movie:movieReducer,\n  reviews:reviewsReducer,\n  recommendations:recommendationsReducer\n});\n\nexport default rootReducer;","const BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"d9a1f141ddec95a6af5324e99ba4c5d9\";\n\nconst buildUrl = (urlChunk) => {\n    return `${BASE_URL}/${urlChunk}?api_key=d9a1f141ddec95a6af5324e99ba4c5d9`\n}\n\nexport { BASE_URL, API_KEY, buildUrl, }\n","import axios from 'axios';\nimport {buildUrl} from '../constants'\n\nconst getAllTrending = async () => {\n    const response = await axios.get(buildUrl(\"trending/all/week\"))\n    return response.data.results;\n}\n\nconst getTrendingByTimeWindow = async (timeWindow=\"day\") => {\n    try{\n        const response = await axios.get(buildUrl(`trending/all/${timeWindow}`));\n        return response.data.results;\n    }\n    catch(error){\n        console.log(error.message)\n    }\n}\n\nexport {getAllTrending,getTrendingByTimeWindow}","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getTrendingByTimeWindow } from '../../infrastructure/services/api/trending';\nimport {requestTrendingsError, requestTrendingsSuccess } from '../actions-creators/trending';\nimport { TRENDING } from '../constants';\n\nexport function* handleTrendingLoad(action) {\n    try {\n        const trending = yield call(getTrendingByTimeWindow,action.timeWindow);\n        yield put(requestTrendingsSuccess(trending));\n    }\n    catch (error) {\n        yield put(requestTrendingsError())\n    }\n\n}\n\nexport default function* watchTrendingLoad() {\n        yield takeEvery(TRENDING.LOAD, handleTrendingLoad);\n}","import axios from 'axios';\nimport { buildUrl } from '../constants';\n\nconst getPopularByType= async (popularType) => {\n    try{\n        const response = await axios.get(buildUrl(`${popularType}/popular`));\n        return response.data.results;\n    }\n    catch(error){\n        console.log(error.message)\n    }\n}\n\nexport {getPopularByType}","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getPopularByType } from '../../infrastructure/services/api/popular';\nimport { requestPopularSuccess } from '../actions-creators/popular';\nimport { POPULAR } from '../constants';\n\nexport function* handlePopularLoad(action) {\n    try {\n        const popular = yield call(getPopularByType, action.popularType);\n        yield put(requestPopularSuccess(popular));\n    }\n    catch (error) {\n        yield put(requestPopularSuccess())\n    }\n\n}\n\nexport default function* watchPopularLoad() {\n    yield takeEvery(POPULAR.LOAD, handlePopularLoad);\n}","import axios from 'axios';\nimport {buildUrl} from '../constants'\n\n\nconst getSearchResults = async (searchTerm) => {\n        const response = await axios.get(`${buildUrl(`search/multi`)}&query=${searchTerm}`);\n        return response.data.results;   \n}\n\nexport {getSearchResults}","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getSearchResults } from '../../infrastructure/services/api/search';\nimport { requestSearchError, requestSearchSuccess } from '../actions-creators/search';\nimport { SEARCH } from '../constants';\n\nexport function* handleSearchLoad(action) {\n    try {\n        const searchResults = yield call(getSearchResults,action.searchTerm);\n        yield put(requestSearchSuccess(searchResults));\n    }\n    catch (error) {\n        yield put(requestSearchError())\n    }\n\n}\n\nexport default function* watchSearchLoad() {\n        yield takeEvery(SEARCH.LOAD, handleSearchLoad);\n}","import { SEARCH } from \"../constants\";\n\nexport const requestSearch=(searchTerm)=>({\n    type:SEARCH.LOAD,\n    searchTerm\n});\n\nexport const requestSearchSuccess=results=>({\n    type:SEARCH.LOAD_SUCCESS,\n    results,\n});\n\nexport const requestSearchError=()=>({\n    type:SEARCH.LOAD_FAIL,\n});\n","import axios from 'axios';\nimport {buildUrl} from '../constants'\n\n\nconst getShowsByType = async (showType) => {\n        const response = await axios.get(`${buildUrl(`tv/${showType}`)}`);\n        return response.data.results;   \n}\n\nexport {getShowsByType}","import { SHOWS } from \"../constants\";\n\nexport const requestShows=(showType)=>({\n    type:SHOWS.LOAD,\n    showType,\n});\n\nexport const requestShowsSuccess=shows=>({\n    type:SHOWS.LOAD_SUCCESS,\n    shows,\n});\n\nexport const requestShowsError=()=>({\n    type:SHOWS.LOAD_FAIL,\n});\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getShowsByType } from '../../infrastructure/services/api/shows';\nimport { requestShowsError, requestShowsSuccess } from '../actions-creators/shows';\nimport { SHOWS } from '../constants';\n\nexport function* handleShowsLoad(action) {\n    try {\n        const shows = yield call(getShowsByType, action.showType);\n        yield put(requestShowsSuccess(shows));\n    }\n    catch (error) {\n        yield put(requestShowsError())\n    }\n\n}\n\nexport default function* watchShowsLoad() {\n    yield takeEvery(SHOWS.LOAD, handleShowsLoad);\n}\n\n","import axios from 'axios';\nimport { buildUrl } from '../constants';\n\nconst getPeopleByType= async (peopleType) => {\n    try{\n        const response = await axios.get(buildUrl(`person/${peopleType}`));\n        return response.data.results;\n    }\n    catch(error){\n        console.log(error.message)\n    }\n}\n\nexport {getPeopleByType}","import { PEOPLE } from \"../constants\";\n\nexport const requestPeople=(peopleType)=>({\n    type:PEOPLE.LOAD,\n    peopleType,\n});\n\nexport const requestPeopleSuccess=people=>({\n    type:PEOPLE.LOAD_SUCCESS,\n    people,\n});\n\nexport const requestPeopleError=()=>({\n    type:PEOPLE.LOAD_FAIL,\n});\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getPeopleByType } from '../../infrastructure/services/api/people';\nimport {requestPeopleError,requestPeopleSuccess } from '../actions-creators/people';\nimport { PEOPLE } from '../constants';\n\nexport function* handlePeopleLoad(action) {\n    try {\n        const people = yield call(getPeopleByType, action.peopleType);\n        yield put(requestPeopleSuccess(people));\n    }\n    catch (error) {\n        yield put(requestPeopleError())\n    }\n\n}\n\nexport default function* watchPeopleLoad() {\n    yield takeEvery(PEOPLE.LOAD,handlePeopleLoad);\n}","import axios from 'axios';\nimport { BASE_URL } from '../constants';\n\n\nconst getMoviesByTerm = async (term) => {\n    const response = await axios.get(`${BASE_URL}/movie/${term}?api_key=d9a1f141ddec95a6af5324e99ba4c5d9`);\n    return response.data.results;\n}\n\nconst getMovieById = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=d9a1f141ddec95a6af5324e99ba4c5d9`);\n    return response.data;\n}\n\nexport {getMoviesByTerm, getMovieById}","import {\n    MOVIE\n} from \"../constants\";\n\nexport const requestMovie = (movieId) => ({\n    type: MOVIE.LOAD,\n    movieId,\n});\n\nexport const requestMovieSuccess = movie => ({\n    type: MOVIE.LOAD_SUCCESS,\n    movie,\n});\n\nexport const requestMovieError = () => ({\n    type: MOVIE.LOAD_FAIL,\n});\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getMovieById } from '../../infrastructure/services/api/movies';\nimport {requestMovieError,requestMovieSuccess } from '../actions-creators/movie';\nimport { MOVIE } from '../constants';\n\nexport function* handleMovieLoad(action) {\n    try {\n        const movie = yield call(getMovieById, action.movieId);\n        yield put(requestMovieSuccess(movie));\n    }\n    catch (error) {\n        yield put(requestMovieError())\n    }\n\n}\n\nexport default function* watchMovieLoad() {\n    yield takeEvery(MOVIE.LOAD,handleMovieLoad);\n}","import axios from 'axios';\nimport {buildUrl} from '../constants'\n\nconst getReviewsByMovie = async (movieId) => {\n        const response = await axios.get(`${buildUrl(`movie/${movieId}/reviews`)}`);\n        return response.data.results;   \n}\n\nexport {getReviewsByMovie}","import {\n    REVIEWS\n} from \"../constants\";\n\nexport const requestReviews = (movieId) => ({\n    type: REVIEWS.LOAD,\n    movieId,\n});\n\nexport const requestReviewsSuccess = reviews => ({\n    type: REVIEWS.LOAD_SUCCESS,\n    reviews,\n});\n\nexport const requestReviewsError = () => ({\n    type: REVIEWS.LOAD_FAIL,\n});\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getReviewsByMovie } from '../../infrastructure/services/api/reviews';\nimport {requestReviewsError, requestReviewsSuccess } from '../actions-creators/reviews';\nimport { REVIEWS } from '../constants';\n\nexport function* handleReviewsLoad(action) {\n    try {\n        const reviews = yield call(getReviewsByMovie, action.movieId);\n        yield put(requestReviewsSuccess(reviews));\n    }\n    catch (error) {\n        yield put(requestReviewsError())\n    }\n\n}\n\nexport default function* watchReviewsLoad() {\n    yield takeEvery(REVIEWS.LOAD,handleReviewsLoad);\n}","import axios from 'axios';\nimport {buildUrl} from '../constants'\n\nconst getRecommendationsByMovie = async (movieId) => {\n        const response = await axios.get(`${buildUrl(`movie/${movieId}/recommendations`)}`);\n        return response.data.results;   \n}\n\nexport {getRecommendationsByMovie}","import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getRecommendationsByMovie } from '../../infrastructure/services/api/recommendations';\nimport {requestRecommendationsSuccess, requestRecommendationsError } from '../actions-creators/recommendations';\nimport { RECOMMENDATIONS } from '../constants';\n\nexport function* handleRecommendationsLoad(action) {\n    try {\n        const movie = yield call(getRecommendationsByMovie, action.movieId);\n        yield put(requestRecommendationsSuccess(movie));\n    }\n    catch (error) {\n        yield put(requestRecommendationsError())\n    }\n\n}\n\nexport default function* watchRecommendationsLoad() {\n    yield takeEvery(RECOMMENDATIONS.LOAD,handleRecommendationsLoad);\n}","import {\n    RECOMMENDATIONS\n} from \"../constants\";\n\nexport const requestRecommendations = (movieId) => ({\n    type: RECOMMENDATIONS.LOAD,\n    movieId,\n});\n\nexport const requestRecommendationsSuccess = recommendations => ({\n    type: RECOMMENDATIONS.LOAD_SUCCESS,\n    recommendations,\n});\n\nexport const requestRecommendationsError = () => ({\n    type: RECOMMENDATIONS.LOAD_FAIL,\n});\n","import { all } from 'redux-saga/effects';\nimport trendingSaga from './trendingSaga';\nimport popularSaga from './popularSaga';\nimport searchSaga from './searchSaga';\nimport showsSaga from './showsSaga';\nimport peopleSaga from './peopleSaga';\nimport movieSaga from './movieSaga';\nimport reviewsSaga from './reviewsSaga';\nimport recommendationsSaga from './recommendationsSaga';\n\nexport default function* rootSaga(){\n    yield all([trendingSaga(),popularSaga(),searchSaga(),showsSaga(),peopleSaga(), movieSaga(), reviewsSaga(),recommendationsSaga()]);\n}","import {compose, applyMiddleware, createStore} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\n\n const configureStore=()=>{\n    const sagaMiddleware=createSagaMiddleware();\n\n    const store=createStore(\n        rootReducer,\n        compose(\n            applyMiddleware(sagaMiddleware),\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__(),\n        ),\n    );\n        sagaMiddleware.run(rootSaga);\n\n        return store;\n\n}\n\nexport default configureStore;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Row, Card, CardImg, CardBody, CardTitle, CardSubtitle, Col, Container, CardGroup } from 'reactstrap';\nimport { getMoviesByTerm } from '../../infrastructure/services/api/movies';\n\nconst Movie=({movieItem})=>{\n    return(\n        <Col md=\"2\" xs=\"6\">\n        <Card className=\"mt-2\">\n            <CardImg top src={`https://www.themoviedb.org/t/p/w440_and_h660_face${movieItem.poster_path}`} alt=\"Card image cap\" />\n            <CardBody>\n                <CardTitle tag=\"h6\" className=\"text-nowrap text-truncate\" style={{width:\"100%\"}}>{movieItem.title}</CardTitle>\n                <CardSubtitle tag=\"p\" className=\"mb-2 text-muted\">{new Date(movieItem.release_date).toLocaleDateString()}</CardSubtitle>\n            </CardBody>\n        </Card>\n        </Col>\n    )\n}\n\nconst Movies = () => {\n    const { term } = useParams();\n    const [movies, setMovies] = useState([]);\n\n    const fetchMoviesByTerm = async (movieTerm) => {\n      const normalizedMovieTerm =movieTerm.replace('-',\"_\")\n        try {\n            const fetchedMovies = await getMoviesByTerm(normalizedMovieTerm);\n            setMovies(fetchedMovies);\n        }\n        catch (error) {\n\n        }\n    }\n\n    useEffect(() => {\n        fetchMoviesByTerm(term)\n    }, [term])\n\n    const capitalizeTitle=(term)=>(term.charAt(0).toUpperCase()+term.slice(1)).replace(\"-\",\" \")\n\n    return (\n        <Container>\n            <h1 className=\"mt-4 mb-4\">{`${capitalizeTitle(term)} Movies`}</h1>\n            <Row className=\"flex-row\">\n            <CardGroup>\n                {\n                    movies.map((movie) => (\n                     <Movie key={movie.id} movieItem={movie} />\n                    ))\n                }\n                </CardGroup>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Movies;","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router';\nimport {\n    Container, CardText, Card,\n    CardBody, Col\n} from 'reactstrap';\nimport { requestSearch } from '../../application/actions-creators/search';\nimport './style.css'\n\nconst useQuery = () => {\n    return new URLSearchParams(useLocation().search)\n}\n\n\nconst SearchResultsCard = ({item}) => {\n    return (<Card className={\"flex-1 flex-row mt-2 mb-2\"}>\n        <img width=\"9%\" height=\"116\" alt=\"item.original_name\" src={`https://www.themoviedb.org/t/p/w440_and_h660_face${item.poster_path}`} />\n        <CardBody>\n            <h6>{item.original_name || item.original_title}</h6>\n            <CardText className={\"text\"} >{item.overview}</CardText>\n        </CardBody>\n    </Card>)\n}\n\nconst Search = () => {\n    let query = useQuery();\n    const searchTerm = useState(query.get(\"query\"));\n    const { results } = useSelector(state => state.search);\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(requestSearch(searchTerm));\n    }, [dispatch, searchTerm])\n\n    return (\n        <Container >\n            <div>\n                <h3>Results</h3>\n                <Col className=\"flex-nowrap flex-row trending flex-1\" >\n                    {\n                        results.map((searchResult) => <SearchResultsCard item={searchResult} key={searchResult.id} />)\n                    }\n                </Col>\n            </div>\n\n\n        </Container>\n    )\n}\n\nexport default Search","import React, { useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Row, Card, CardImg, CardBody, CardTitle, CardSubtitle, Col, Container, CardGroup } from 'reactstrap';\nimport { requestShows } from '../../application/actions-creators/shows';\n\nconst ShowsItem=({showItem})=>{\n    return(\n        <Col md=\"2\" xs=\"6\">\n        <Card className=\"mt-2\">\n            <CardImg top src={`https://www.themoviedb.org/t/p/w440_and_h660_face${showItem.poster_path}`} alt=\"Card image cap\" />\n            <CardBody>\n                <CardTitle tag=\"h6\" className=\"text-nowrap text-truncate\" style={{width:\"100%\"}}>{showItem.name}</CardTitle>\n                <CardSubtitle tag=\"p\" className=\"mb-2 text-muted\">{new Date(showItem.release_date).toLocaleDateString()}</CardSubtitle>\n            </CardBody>\n        </Card>\n        </Col>\n    )\n}\n\nconst Shows = () => {\n    const { term } = useParams();\n    const normalizedShowTerm =term.replace('-',\"_\")\n\n    const { shows } = useSelector(state => state.shows);\n    const dispatch = useDispatch()\n\n\n    useEffect(() => {\n        dispatch(requestShows(normalizedShowTerm));\n    }, [dispatch, normalizedShowTerm])\n\n    const capitalizeTitle=(term)=>(term.charAt(0).toUpperCase()+term.slice(1)).replace(\"-\",\" \")\n\n    return (\n        <Container>\n            <h1 className=\"mt-4 mb-4\">{`${capitalizeTitle(term)} Shows`}</h1>\n            <Row className=\"flex-row\">\n            <CardGroup>\n                {\n                    shows.map((show) => (\n                     <ShowsItem key={show.id} showItem={show} />\n                    ))\n                }\n                </CardGroup>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Shows;","import Shows from \"./Shows\";\n\nexport default Shows;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Row, Card, CardImg, CardBody, CardTitle, CardSubtitle, Col, Container, CardGroup } from 'reactstrap';\nimport {requestPeople} from '../../application/actions-creators/people'\n\n\nconst Person=({personItem})=>{\n    return(\n        <Col md=\"2\" xs=\"5\">\n        <Card className=\"mt-2\">\n            <CardImg top src={`https://www.themoviedb.org/t/p/w440_and_h660_face${personItem.profile_path}`} alt=\"Card image cap\" />\n            <CardBody>\n                <CardTitle tag=\"h6\" className=\"text-nowrap text-truncate\" style={{width:\"100%\"}}>{personItem.name}</CardTitle>\n             <CardSubtitle tag=\"p\" className=\"mb-2 text-muted\">{personItem.known_for[0].original_title}</CardSubtitle>\n                \n            </CardBody>\n        </Card>\n        </Col>\n    )\n}\n\nconst People = () => {\n    const { term } = useParams();\n    const normalizedPeopleTerm =term.replace('-',\"_\")\n\n    const { people } = useSelector(state => state.people);\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(requestPeople(normalizedPeopleTerm));\n    }, [dispatch, normalizedPeopleTerm])\n\n    const capitalizeTitle=(term)=>(term.charAt(0).toUpperCase()+term.slice(1)).replace(\"-\",\" \")\n\n    return (\n        <Container>\n            <h1 className=\"mt-4 mb-4\">{`${capitalizeTitle(term)} People`}</h1>\n            <Row className=\"flex-row\">\n            <CardGroup>\n                {\n                    people.map((movie) => (\n                     <Person key={movie.id} personItem={movie} />\n                    ))\n                }\n                </CardGroup>\n            </Row>\n        </Container>\n    )\n}\n\nexport default People;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { requestMovie } from '../../application/actions-creators/movie';\nimport { requestReviews } from '../../application/actions-creators/reviews';\nimport { requestRecommendations } from '../../application/actions-creators/recommendations';\nimport { Col, Row, Card, CardImg } from 'reactstrap';\nimport './styles.css';\n\nconst Movie = () => {\n    const { id } = useParams();\n\n    const { movie } = useSelector(state => state.movie);\n    const { reviews } = useSelector(state => state.reviews);\n    const { recommendations } = useSelector(state => state.recommendations);\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(requestMovie(id));\n        dispatch(requestReviews(id));\n        dispatch(requestRecommendations(id));\n    }, [dispatch, id])\n\n\n    return (\n        <main>\n            <Row className=\"flex-1\" style={{ ...getStyles(movie) }}>\n                <MovieImage  movie={movie}/>\n                <MovieDescription movie={movie}/>\n            </Row>\n            <Col>\n                <h4 className=\"text-black\" style={{ marginTop: 32 }}>Reviews</h4>\n                {reviews.map((review) => <ReviewsCard review={review} />)}\n            </Col>\n            <Col>\n                <h4 className=\"text-black\" style={{ marginTop: 32 }}>Recommendations</h4>\n                <Row className=\"mt-4 flex-nowrap flex-row recommendations flex-1\">\n                    {\n                        recommendations.map((recommendation) => <RecommendationsCard recommendation={recommendation} key={recommendation.id} />)\n                    }\n                </Row>\n            </Col>\n        </main>\n    )\n}\n\nconst RecommendationsCard = ({ recommendation }) => {\n    return <Col md=\"2\" xs=\"6\" style={{ cursor: \"pointer\" }}>\n        <Card inverse>\n            <CardImg src={`https://www.themoviedb.org/t/p/w440_and_h660_face${recommendation.poster_path}`} alt=\"Card image cap\" />\n        </Card>\n        <h6 className=\"text-black\">{recommendation.original_title || recommendation.title}</h6>\n        <p>{new Date(recommendation.release_date).toLocaleDateString()}</p>\n    </Col>;\n}\n\nconst ReviewsCard = ({ review }) => {\n    return <Row key={review.id} >\n        <Card className=\"mt-2 p-2\" style={{ backgroundColor: \"white\" }}>\n            <Row>\n                <img src={`${review.author_details.avatar_path}`.substring(1)} alt=\"Card cap\" style={{ width: 76, height: 76, borderRadius: 48, marginLeft: 16, marginTop: 16 }} />\n                <Col>\n                    <h6 className=\"text-nowrap text-truncate\" style={{ width: \"100%\" }}>{review.author}</h6>\n                    <p className=\"mb-2  content\">{review.content}</p>\n                    <p className=\"mb-2 text-muted\">{new Date(review.created_at).toLocaleDateString()}</p>\n                </Col>\n            </Row>\n        </Card>\n    </Row>\n}\n\nconst MovieImage = ({movie}) => {\n    return <Col md=\"2\" xs=\"6\" >\n        <Card inverse>\n            <CardImg src={`https://www.themoviedb.org/t/p/w440_and_h660_face${movie.poster_path}`} alt=\"Card image cap\" />\n        </Card>\n    </Col>\n}\n\nconst MovieDescription = ({movie}) => {\n    return <Col style={{ marginTop: 16 }} className=\"text-white\">\n        <h4 >{`${movie.original_title || movie.title} (${new Date(movie.release_date).getFullYear()})`}</h4>\n        <Row className=\"ml-1 \">\n            {movie.genres && movie.genres.map((genre) => <p key={genre.id}>{genre.name} ,</p>)}\n        </Row>\n        <h5>Overview</h5>\n        <p>{movie.overview}</p>\n    </Col>\n}\n\n\nconst getStyles=(movie)=> {\n    return {\n        backgroundImage: `url(${`https://www.themoviedb.org/t/p/w440_and_h660_face${movie.backdrop_path}`})`,\n        backgroundRepeat: 'no-repeat',\n        paddingTop: 116,\n        paddingBottom: 76,\n        paddingLeft: 24,\n        width: \"100%\",\n        backgroundSize: \"cover\",\n    }\n}\n\nexport default Movie;","import React from 'react'\nimport { Col, Row } from 'reactstrap'\nimport './style.css'\n\nconst Footer = () => {\n    return (\n        <Col style={{ backgroundColor: \"midnightblue\", color: \"white\" }} >\n            <Row style={{ padding: 32, paddingTop: 64 }}>\n                <Logo />\n                <Basics />\n                <GetInvolved />\n                <Community />\n                <Legal />\n            </Row>\n        </Col>\n    )\n}\n\nconst Logo = () => {\n    return <Col>\n        <img src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\" alt=\"logo\" style={{ height: 76 }} />\n    </Col>\n}\n\nconst Basics = () => {\n    return <Col>\n        <h5>THE BASICS</h5>\n        <p><a href=\"https://www.themoviedb.org/about\">About TMDB</a></p>\n        <p><a href=\"https://www.themoviedb.org/about/staying-in-touch\">Contact Us</a></p>\n        <p><a href=\"https://www.themoviedb.org/talk\">Support Forums</a></p>\n        <p><a href=\"https://www.themoviedb.org/documentation/api\">API</a></p>\n        <p><a href=\"https://status.themoviedb.org/\">System Status</a></p>\n    </Col>\n}\n\nconst GetInvolved = () => {\n    return <Col>\n        <h5>GET INVOLVED</h5>\n        <p><a href=\"https://www.themoviedb.org/bible\">Contribution Bible</a></p>\n        <p><a href=\"https://www.themoviedb.org/apps\">3rd Party Applications</a></p>\n        <p><a href=\"https://www.themoviedb.org/movie/new\">Add New Movie</a></p>\n        <p><a href=\"https://www.themoviedb.org/tv/new\">Add New TV Show</a></p>\n    </Col>\n}\n\nconst Community = () => {\n    return <Col>\n        <h5>Community</h5>\n        <p><a href=\"https://www.themoviedb.org/documentation/community/guidelines\">Guidelines</a></p>\n        <p><a href=\"https://www.themoviedb.org/discuss\">Discussions</a></p>\n        <p><a href=\"https://www.themoviedb.org/leaderboard\">Leaderboard</a></p>\n        <p><a href=\"https://twitter.com/themoviedb\">Twitter</a></p>\n    </Col>\n}\n\nconst Legal = () => {\n    return <Col>\n        <h5>Legal</h5>\n        <p><a href=\"https://www.themoviedb.org/terms-of-use\">Terms of use</a></p>\n        <p><a href=\"https://www.themoviedb.org/documentation/api/terms-of-use\">API Terms of Use</a></p>\n        <p><a href=\"https://www.themoviedb.org/privacy-policy\">Privacy Policy</a></p>\n    </Col>\n}\n\nexport default Footer","import firebase from 'firebase/app'\nimport  'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/storage'\n\nvar firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n}\n\nlet app = firebase.initializeApp(firebaseConfig);\n\nexport const authentication = firebase.auth(app);\nexport const firestore = firebase.firestore(app);\nexport const storage = firebase.storage(app)","import {authentication} from './config'\n\n//register user\nexport const registerUser = async (email, password) => {\n    try {\n        return (await authentication.createUserWithEmailAndPassword(email, password)).user\n    } catch (error) {\n        return error\n    }\n}\n\n//login user\nexport const loginUser = async (email, password) => {\n    try {\n        return (await authentication.signInWithEmailAndPassword(email, password)).user\n    } catch (error) {\n        return error\n    }\n}\n\n//sign out user\nexport const signOutUser = async () => {\n    try {\n        return await authentication.signOut()\n    } catch (error) {\n        console.error(error)\n    }\n}\n\n//get user profile\nexport const getUserProfile=async () =>{\n    let profile={}\n    const user=authentication.currentUser; \n    let name, email, photoUrl, uid, emailVerified;\n\n    if(user !=null){\n        name = user.displayName;\n        email = user.email;\n        photoUrl = user.photoURL;\n        emailVerified = user.emailVerified;\n        uid = user.uid; \n\n        profile={name,email,photoUrl,emailVerified, uid};\n    }\n\n    return profile;\n}\n\n//update user profile\nexport const updateUser = async (displayName, photoURL) => {\n    try {\n        return await (authentication.currentUser.updateProfile({displayName, photoURL}))\n    } catch (error) {\n        return error\n    }\n}\n\n//Send password reset email\nexport const sendResetEmail=async (email)=>{\n    try {\n   const sent= authentication.sendPasswordResetEmail(email)\n   console.log(sent)\n   return sent;\n    } catch (error) {\n      throw new Error(error.message);  \n    }\n}","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Col, Container, Input, Row, Button } from 'reactstrap';\nimport { loginUser } from '../../infrastructure/services/firebase/auth'\nconst SignIn = () => {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [error, setError] = useState();\n\n    const history = useHistory()\n\n    const signInUser = async (e) => {\n        e.preventDefault()\n        let user = await loginUser(email, password);\n        if (!user.uid) {\n            setError(user.message)\n        } else {\n            history.push(\"/\")\n        }\n\n    }\n\n    return (\n        <Container >\n            <Row style={{ marginTop: 64, marginBottom:64,backgroundColor:\"white\" }} >\n                <Col className=\"d-none d-md-block\">\n                    <img src={`https://images.unsplash.com/photo-1606603696914-a0f46d934b9c?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&h=600`} alt=\"movie poster\" />\n                </Col>\n                <Col className=\"d-flex flex-column justify-content-between p-4\">\n                    <h3>Sign In</h3>\n                    <label>Email address</label>\n                    <Input \n                    placeholder=\"Email address\" \n                    type=\"email\"\n                    value={email}\n                    onChange={(event)=>setEmail(event.target.value)}\n                    />\n                    <label>Password</label>\n                    <Input\n                     placeholder=\"Password\"\n                     type=\"password\"\n                     onChange={(event)=>setPassword(event.target.value)}\n                      />\n                    <Button className=\"mt-2\" color=\"primary\" size=\"lg\" block onClick={signInUser}>Sign In</Button>\n                    <Row className=\"justify-content-between\">\n                    <a href=\"/signup\">Don't have an account?</a>\n                      <a href=\"/signup\">Forgot password</a>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default SignIn;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Col, Container, Input, Row, Button } from 'reactstrap';\nimport { registerUser } from '../../infrastructure/services/firebase/auth'\n\nconst SignUp = () => {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [error, setError] = useState();\n\n    let history = useHistory();\n\n    const signUpUser = async (e) => {\n        e.preventDefault()\n        let user = await registerUser(email, password);\n\n        if (!user.uid) {\n            setError(user.message)\n        } else {\n\n            /**\n             * Store user in firebase  for favourites\n             */\n\n            history.push(\"/profile\")\n        }\n\n    }\n\n\n    return (\n        <Container >\n            <Row style={{ marginTop: 64, marginBottom: 64, backgroundColor: \"white\" }} >\n                <Col className=\"d-none d-md-block\">\n                    <img src={`https://images.unsplash.com/photo-1512070750041-b9479c107194?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&h=600`} alt=\"movie poster\" />\n                </Col>\n                <Col className=\"d-flex flex-column justify-content-between p-4\">\n                    <h3>Sign Up</h3>\n                    <label>Email address</label>\n                    <Input\n                        placeholder=\"Email address\"\n                        type=\"email\"\n                        value={email}\n                        onChange={(event) => setEmail(event.target.value)}\n                    />\n                    <label>Password</label>\n                    <Input\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={(event) => setPassword(event.target.value)}\n                    />\n                    <Button className=\"mt-2\" color=\"primary\" size=\"lg\" block onClick={signUpUser}>Create Account</Button>\n                    <a href=\"/signin\">Already have an account?</a>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default SignUp;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { Col, Container, Input, Row, Button } from 'reactstrap';\nimport { sendResetEmail } from '../../infrastructure/services/firebase/auth'\n\nconst ForgotPassword = () => {\n    const [email, setEmail] = useState();\n    const [error, setError] = useState();\n\n    const history = useHistory()\n\n    const resetPassword = async (e) => {\n        e.preventDefault()\n        await sendResetEmail(email);\n    }\n\n    return (\n        <Container >\n            <Row style={{ marginTop: 64, marginBottom: 64, backgroundColor: \"white\" }} >\n                <Col className=\"d-none d-md-block\">\n                    <img src={`https://images.unsplash.com/photo-1606603696914-a0f46d934b9c?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&h=600`} alt=\"movie poster\" />\n                </Col>\n                <Col className=\"d-flex flex-column justify-content-between p-4\">\n                    <h3>Sign In</h3>\n                    <label>Email address</label>\n                    <Input\n                        placeholder=\"Email address\"\n                        type=\"email\"\n                        value={email}\n                        onChange={(event) => setEmail(event.target.value)}\n                    />\n\n                    <Button className=\"mt-2\" color=\"primary\" size=\"lg\" block onClick={resetPassword}>Reset Password</Button>\n                    <a href=\"/signup\">Don't have an account?</a>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default ForgotPassword;","import React from 'react';\nimport Home from './views/home';\nimport { Provider } from 'react-redux';\nimport configureStore from './application/store';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Movies } from './views/movies';\nimport { Header } from './views/home/components';\nimport { Search } from './views/search';\nimport Shows from './views/shows';\nimport { People } from './views/people';\nimport { Movie } from './views/movie';\nimport Footer from './views/footer';\nimport SignIn from './views/signin';\nimport SignUp from './views/signup';\nimport ForgotPassword from './views/forgotpassword';\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store} >\n      <BrowserRouter>\n        <div>\n          <Header />\n          <Switch>\n            <Route path=\"/people/:term\">\n              <People />\n            </Route>\n            <Route path=\"/movies/:term\">\n              <Movies />\n            </Route>\n            <Route path=\"/shows/:term\">\n              <Shows />\n            </Route>\n            <Route path=\"/search\">\n              <Search />\n            </Route>\n            <Route path=\"/movie/:id\">\n              <Movie />\n            </Route>\n            <Route path=\"/signin\">\n              <SignIn />\n            </Route>\n            <Route path=\"/signup\">\n              <SignUp />\n            </Route>\n            <Route path=\"/forgotpassword\">\n              <ForgotPassword />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n          <Footer />\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}